# cat cloud-config-vaultdev.yaml|multipass launch -m 2G -n vaultdev --cloud-init -
# ssh -oStrictHostKeyChecking=no ubuntu@vaultdev.local
# multipass delete vaultdev && multipass purge && ssh-keygen -R vaultdev.local
#cloud-config
users:
  - default
  - name: ubuntu
    gecos: Ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: users, admin
    shell: /bin/bash
    ssh_import_id: None
    lock_passwd: true
    ssh_authorized_keys:
      - PUBLICKEY
package_update: true
package_upgrade: true
packages:
  - avahi-daemon
  - zip
write_files:
  - content: |
      CHECK SYSTEM vaultserver
      set daemon 10
      set log /var/log/monit.log

      set mail-format { from: monit@richnusgeeks.demo }

      set httpd port 2812 and
        use address 0.0.0.0
        allow localhost
        allow 0.0.0.0/0
        allow admin:monit
        allow guest:guest readonly

      include /opt/monit/monit.d/*
    path: /opt/monit/conf/monitrc
    owner: root:root
    permissions: '0600'
  - content: |
      check filesystem rootfs with path /
        if space usage > 90% then alert
        if inode usage > 90% then alert
    path: /opt/monit/monit.d/spaceinode
    owner: root:root
    permissions: '0600'
  - content: |
      check process vaultdev matching vault
        start program = "/bin/systemctl start vaultdev" with timeout 10 seconds
        stop program = "/bin/systemctl stop vaultdev" with timeout 10 seconds
        if failed port 8200 for 2 cycles then restart
    path: /opt/monit/monit.d/vaultdev
    owner: root:root
    permissions: '0600'
  - content: |
      [Unit]
      Description=Pro-active monitoring utility for unix systems
      After=network.target
      Documentation=man:monit(1) https://mmonit.com/wiki/Monit/HowTo

      [Service]
      Type=simple
      KillMode=process
      ExecStart=/opt/monit/bin/monit -I -c /opt/monit/conf/monitrc
      ExecStop=/opt/monit/bin/monit -c /opt/monit/conf/monitrc quit
      ExecReload=/opt/monit/bin/monit -c /opt/monit/conf/monitrc reload
      Restart = on-abnormal
      StandardOutput=journal
      StandardError=journal

      [Install]
      WantedBy=multi-user.target
    path: /lib/systemd/system/monit.service
    owner: root:root
    permissions: '0600'
  - content: |
      [Unit]
      Description=Vault server development mode
      After=network.target
      Documentation=https://www.vaultproject.io/docs

      [Service]
      ExecStart=/usr/local/bin/vault server -dev
      ExecStop=/bin/kill -s QUIT ${MAINPID}
      Restart = on-abnormal
      StandardOutput=journal
      StandardError=journal

      [Install]
      WantedBy=multi-user.target
    path: /lib/systemd/system/vaultdev.service
    owner: root:root
    permissions: '0600'
runcmd:
  - [ wget, "https://mmonit.com/monit/dist/binary/5.28.0/monit-5.28.0-linux-x64.tar.gz", -O, monit.tgz ]
  - [ tar, zxvf, monit.tgz ]
  - [ mkdir, /opt/monit/bin ]
  - [ cp, monit-5.28.0/bin/monit, /opt/monit/bin/monit ]
  - [ rm, -rfv, monit.tgz, monit-5.28.0 ]
  - wget "https://get.docker.com" -O get-docker.sh
  - sh get-docker.sh
  - rm -fv get-docker.sh
  - usermod -aG docker ubuntu
  - wget "https://github.com/docker/compose/releases/download/1.28.5/docker-compose-Linux-x86_64" -O /usr/local/bin/docker-compose
  - chmod 0755 /usr/local/bin/docker-compose
  - mkdir -p /opt/docker/compose
  - wget "https://releases.hashicorp.com/vault/1.7.0-rc1/vault_1.7.0-rc1_linux_amd64.zip" -O vault.zip
  - unzip -o vault.zip -d /usr/local/bin
  - rm -fv vault.zip
  - systemctl start monit
  - systemctl start vaultdev
output:
  init:
    output: "> /var/log/cloud-init.out"
    error: "> /var/log/cloud-init.err"
  config: "tee -a /var/log/cloud-config.log"
  final:
    - ">> /var/log/cloud-final.out"
    - "/var/log/cloud-final.err"
